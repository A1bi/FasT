- include_css 'members/main'
- title "Mitgliederverwaltung – #{title}"

.hl Mitgliederverwaltung
= form_for [:admin, @member] do |f|
  .box
    .top = title
    .con
      = render 'errors', errors: @member.errors
      = render 'errors', errors: @member.sepa_mandate.errors
      table.form
        tr
          td width='40%' Vorname:
          td = f.text_field :first_name, required: true
        tr
          td Nachname:
          td = f.text_field :last_name, required: true
        tr
          td Titel:
          td
            = f.text_field :title
            .small Zum Beispiel <em>Dr. med.</em>
        tr
          td Vorname in Anrede:
          td
            = f.text_field :nickname, value: @member[:nickname]
            .small Zum Beispiel Uli statt Ulrich. Ansonsten freilassen.
        tr
          td Geschlecht:
          td = f.select :gender, Members::Member.genders.map { |g| [t("genders.#{g}"), g] }
        tr
          td Geburtstag:
          td = f.date_select :birthday, include_blank: true, start_year: 1910, end_year: Date.today.year

        tr: td(colspan=2): h3 Adresse
        tr
          td Straße und Hausnummer:
          td = f.text_field :street
        tr
          td PLZ:
          td = f.number_field :plz, limit: 5
        tr
          td Stadt:
          td = f.text_field :city

        tr: td(colspan=2): h3 Kontaktdaten
        tr
          td E-Mail-Adresse:
          td
            = f.email_field :email
            .small Diese Adresse wird für den Versand von E-Mails wie der Begrüßungs-E-Mail sowie für den Login in den Mitgliederbereich verwendet. Sollte keine eigene E-Mail-Adresse vorhanden sein, werden E-Mails stattdessen an ein eventuell verknüpftes Familienmitglied verschickt.
        tr
          td Telefonnummer:
          td = f.text_field :phone

        tr: td(colspan="2"): h3 Bankverbindung
        = f.fields_for @member.sepa_mandate do |ff|
          tr
            td Mandat wählen:
            td
              = f.select :sepa_mandate_id
                option neues Mandat anlegen
                - @sepa_mandates.each do |category, mandates|
                  optgroup label=t(".sepa_mandates.#{category}")
                    - if mandates.any?
                      = options_from_collection_for_select(mandates, :id, ->(m) { "#{m.number(prefixed: true)}: #{obfuscated_mandate_iban(m)}" }, selected: ->(m) { category == :all && m.id == @member.sepa_mandate_id })
          tr
            td Kontoinhaber:
            td = ff.text_field :debtor_name
          tr
            td IBAN:
            td = ff.text_field :iban, value: obfuscated_mandate_iban(@member.sepa_mandate)
          tr
            td Mandatsnummer:
            td = ff.text_field :number, value: @member.sepa_mandate&.number(prefixed: true)
          tr
            td Mandatsdatum:
            td = ff.date_select :issued_on, start_year: 2009, end_year: Date.today.year, default: Date.today
          tr
            td Jahresbeitrag:
            td #{f.number_field :membership_fee, step: 0.01, placeholder: Settings.members.default_membership_fee} Euro
          tr
            td.small colspan=2 Änderungen an diesem Mandat werden automatisch auch für andere Mitglieder übernommen, die ebenfalls das Mandat mit dieser Nummer nutzen.

        tr: td(colspan=2): h3 Weitere Angaben
        - if !@member.in_family?
          tr
            td
              | Zu Familie hinzufügen von:
              .small Wählen Sie ein Familienmitglied, dessen Familie dieses Mitglied zugeordnet werden soll.
            td = f.collection_select(:family_member_id, @members, :id, ->(member) { "#{member.last_name}, #{member.first_name}" }, include_blank: true)
        tr
          td Beitrittsdatum:
          td = f.date_select :joined_at, start_year: 2009, end_year: Date.today.year, default: Date.today
        tr
          td Gruppe:
          td = f.select(:group, options_for_select(@groups, @member.group))

      - if @member.persisted? && policy(@member).update_permissions?
        h3 Berechtigungen
        - User::PERMISSIONS.each do |permission|
          div
            = label_tag
              => f.check_box :permissions, { multiple: true, checked: @member.permitted?(permission) }, permission, nil
              = t("permissions.#{permission}")
        - shared_email_accounts.each do |email|
          div
            = label_tag
              => f.check_box :shared_email_accounts_authorized_for, { multiple: true, checked: @member.authorized_for_shared_email_account?(email) }, email, nil
              = t('permissions.authorized_for_shared_email_account_html', email: email)

      - if @member.new_record?
        .submit-note
          p Nach Anlegen dieses Mitglieds wird automatisch eine <b>Begrüßungs-E-Mail</b> sowie eine weitere <b>E-Mail zum Aktivieren des Mitgliedskontos</b> an das Mitglied versandt.
          p Ebenfalls wird in den nächsten Tagen automatisch <b>der erste Mitgliedsbeitrag</b> vom Konto des Mitglieds eingezogen.
      .submit = cond_submit f

      - if @member.persisted?
        p
          h3 Familie
          - if @member.in_family?
            ul
              - @member.family.members.alphabetically.each do |member|
                li = link_to member.name.full, admin_members_member_path(member)
              p.small = link_to 'Dieses Mitglied aus der Familie entfernen.', admin_members_member_path(@member, members_member: { family_id: nil }), method: :patch, data: { confirm: 'Möchten Sie das Mitglied wirklich aus der Familie entfernen?'}
          - else
            em Dieses Mitglied ist keiner Familie zugeordnet.
