/* maven-pro-regular - latin */
@font-face {
  font-display: swap;
  font-family: 'Maven Pro';
  font-style: normal;
  font-weight: 400;
  src: url(asset_path('maven-pro-v32-latin-regular.woff2')) format('woff2'),
       url(asset_path('maven-pro-v32-latin-regular.woff')) format('woff');
}
/* maven-pro-500 - latin */
@font-face {
  font-display: swap;
  font-family: 'Maven Pro';
  font-style: normal;
  font-weight: 500;
  src: url(asset_path('maven-pro-v32-latin-500.woff2')) format('woff2'),
       url(asset_path('maven-pro-v32-latin-500.woff')) format('woff');
}
/* maven-pro-900 - latin */
@font-face {
  font-display: swap;
  font-family: 'Maven Pro';
  font-style: normal;
  font-weight: 900;
  src: url(asset_path('maven-pro-v32-latin-900.woff2')) format('woff2'),
       url(asset_path('maven-pro-v32-latin-900.woff')) format('woff');
}
/* lora-regular - latin */
@font-face {
  font-display: swap;
  font-family: 'Lora';
  font-style: normal;
  font-weight: 400;
  src: url(asset_path('lora-v32-latin-regular.woff2')) format('woff2'),
       url(asset_path('lora-v32-latin-regular.woff')) format('woff');
}
/* lora-italic - latin */
@font-face {
  font-display: swap;
  font-family: 'Lora';
  font-style: italic;
  font-weight: 400;
  src: url(asset_path('lora-v32-latin-italic.woff2')) format('woff2'),
       url(asset_path('lora-v32-latin-italic.woff')) format('woff');
}
/* lora-700italic - latin */
@font-face {
  font-display: swap;
  font-family: 'Lora';
  font-style: italic;
  font-weight: 700;
  src: url(asset_path('lora-v32-latin-700italic.woff2')) format('woff2'),
       url(asset_path('lora-v32-latin-700italic.woff')) format('woff');
}

$font-size-base: 1rem;
$heading-size-multiplier: 1.618;

$num-columns: 12;
$spacing-steps: (
  0: 0,
  1: .5,
  2: 1,
  3: 2,
  4: 3
);
$media-queries: (
  sm: 'max-width: 767px',
  md: 'min-width: 768px',
  lg: 'min-width: 992px'
);

$green: #78ff1f;
$red: #ff5c5c;
$black: #1F2034;
$dark-gray: #666666;
$light-gray: #f2f2f2;
$white: #ffffff;

$body-bg: $light-gray;
$cta-color: $red;
$cta-color-hover: darken($red, 10%);
$cta-color-active: darken($red, 30%);

$top-bar-initial-logo-height: 3.5rem;
$top-bar-initial-padding: 1rem;
$top-bar-stuck-logo-height: 2.5rem;
$top-bar-stuck-transition-duration: .3s;
$menu-reveal-duration: .5s;

@function spacing($step) {
  @return map-get($spacing-steps, $step) * 1rem;
}

@mixin media-query($size) {
  @media (map-get($media-queries, $size)) {
    @content;
  }
}

.ff-m {
  font-family: 'Maven Pro', sans-serif;
}

.ff-l {
  font-family: 'Lora', sans-serif;
}

.f-mb {
  @extend .ff-m;
  font-weight: 900;
}

.f-li {
  @extend .ff-l;
  font-style: italic;
}

.f-lbi {
  @extend .f-li;
  font-weight: 700;
}

@each $step, $factor in $spacing-steps {
  @each $property, $abbreviation in (margin: m, padding: p) {
    @each $side, $side-abbreviation in (top: t, bottom: b, left: s, right: e) {
      .#{$abbreviation}#{$side-abbreviation}-#{$step} {
        #{$property}-#{$side}: spacing($step);
      }
    }

    .#{$abbreviation}x-#{$step} {
      @extend .#{$abbreviation}s-#{$step};
      @extend .#{$abbreviation}e-#{$step};
    }

    .#{$abbreviation}y-#{$step} {
      @extend .#{$abbreviation}t-#{$step};
      @extend .#{$abbreviation}b-#{$step};
    }

    .#{$abbreviation}-#{$step} {
      #{$property}: spacing($step);
    }
  }
}

@each $class, $alignment in (start: left, center: center, end: right) {
  .text-#{$class} {
    text-align: $alignment;
  }

  @each $size in map-keys($media-queries) {
    @include media-query($size) {
      .text-#{$size}-#{$class} {
        text-align: $alignment !important;
      }
    }
  }
}

@each $display in (none, block, flex) {
  .d-#{$display} {
    display: $display;
  }

  @each $size in map-keys($media-queries) {
    @include media-query($size) {
      .d-#{$size}-#{$display} {
        display: $display !important;
      }
    }
  }
}

%list-style-none {
  @extend .m-0;
  list-style: none;
}

:root {
  --dynamic-color-0: #9FF3C6;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
  scroll-padding-top: $top-bar-initial-logo-height;

  &.top-bar-stuck {
    scroll-padding-top: $top-bar-stuck-logo-height;
  }
}

body {
  @extend .ff-m;
  @extend .m-0;
  font-size: $font-size-base;
  color: $black;
  background: $body-bg;
}

h1, h2, h3 {
  @extend .my-2;
}

h1 {
  @extend .f-lbi;
  font-size: 1rem * $heading-size-multiplier * $heading-size-multiplier * $heading-size-multiplier;
}

h2 {
  @extend .f-li;
  font-size: 1rem * $heading-size-multiplier * $heading-size-multiplier;
  font-weight: 400;
}

h3 {
  @extend .f-mb;
  font-size: 1rem;
}

p {
  @extend .my-2;
}

a {
  color: $cta-color;
  text-decoration: none;
  transition: color .3s;

  &:hover {
    color: $cta-color-hover;
  }
}

hr {
  border: 0;
  height: 4px;
  background-image: url('data:image/svg+xml,%3csvg width="100%25" height="100%25" xmlns="http://www.w3.org/2000/svg"%3e%3crect width="100%25" height="200%25" fill="none" stroke="black" stroke-width="4" y="2" stroke-dasharray="3%2c8" stroke-linecap="round"/%3e%3c/svg%3e');
}

header {
  position: sticky;
  top: 0;
  background: var(--dynamic-color-0);
  transition: padding $top-bar-stuck-transition-duration;

  :root.top-bar-stuck & .logo svg {
    max-height: $top-bar-stuck-logo-height;
  }

  .container {
    display: flex;
    align-items: center;
  }

  .menu-toggle {
    width: $top-bar-stuck-logo-height;
    height: $top-bar-stuck-logo-height;
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    background: $cta-color;
    position: relative;
    cursor: pointer;
    transition: transform $menu-reveal-duration, background .3s;

    &:after {
      @extend .ff-l;
      @extend .text-center;
      position: absolute;
      content: '...';
      color: $white;
      font-size: 2rem;
      width: 100%;
      margin-top: -10px;
    }

    &:hover {
      background: $cta-color-hover;
    }

    &:active, .menu-active & {
      background: $cta-color-active;
    }

    .menu-active & {
      transform: rotate(90deg);
    }
  }

  .logo {
    @extend .text-end;
    flex: 1;

    svg {
      @extend .py-1;
      display: inline-block;
      max-height: $top-bar-initial-logo-height;
      width: auto;
      transition: max-height $top-bar-stuck-transition-duration;

      @for $i from 1 through 4 {
        g:nth-of-type(#{$i}) * {
          fill: var(--dynamic-color-#{$i}) !important;
        }
      }

      g:nth-of-type(4) * {
        transform-box: fill-box;
        transform-origin: center;
        animation: rotate-diamond 1s;
      }

      @keyframes rotate-diamond {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(-180deg);
        }
      }
    }
  }
}

.sticky-helper {
  height: 0;
}

.container.nav {
  position: relative;
}

header, .container.nav {
  z-index: 10;
}

nav {
  position: fixed;
  width: 100%;
  height: 0;
  overflow: hidden;
  background: $white;
  transition: height $menu-reveal-duration;

  ul {
    @extend .f-li;
    font-size: 2rem;
    font-weight: 400;

    a, a:hover {
      color: $black;
    }

    a:hover {
      text-decoration: underline;
    }
  }
}

footer {
  @extend .mt-3;
  background: var(--dynamic-color-0);

  ul {
    @extend .f-mb;

    li {
      margin-bottom: .3rem;
    }

    a {
      color: $black;
      text-decoration: underline;

      &:hover {
        color: inherit;
        text-decoration: none;
      }
    }
  }
}

nav ul, footer ul {
  @extend .py-1, .px-2;
  @extend %list-style-none;
}

.caption {
  @extend .f-lbi;
  font-size: 1rem / $heading-size-multiplier;
}

.text-green {
  color: $green;
}

.text-red {
  color: $red;
}

.shadow {
  box-shadow: 0 0 13px 0 rgba($black, 0.23);
}

.row {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-right: -(spacing(1));
  margin-left: -(spacing(1));
}

@mixin col($width) {
  width: $width;
}

@mixin col-classes($device-size: null) {
  $device-infix: if($device-size, '-#{$device-size}', '');

  @for $column from 1 through $num-columns {
    .col#{$device-infix}-#{$column} {
      @include col(100% / $num-columns * $column);
    }
  }
}

.container > .row > .col:not(.w-100) {
  max-width: 600px;
}

[class^='col-'], .col {
  // necessary for case like this: div.col-md-6
  // devices smaller than md will then default to 100%
  @include col(100%);
  @extend .p-1;
}

@include col-classes();

@each $width in 50, 100 {
  .w-#{$width} {
    width: $width * 1%;
  }
}

.container {
  @extend .px-2;
  max-width: 1000px;
  box-sizing: content-box;
  margin-left: auto;
  margin-right: auto;
}

.plane {
  *:first-child {
    @extend .mt-0;
  }

  *:last-child {
    @extend .mb-0;
  }

  > *:not(.row):not(:last-child) {
    @extend .mb-2;
  }

  ~ .caption {
    @extend .pt-2, .pe-1;
    @extend .text-end;
  }
}

.card {
  @extend .plane;
  @extend .p-2;
  background: $white;
}

.btn {
  @extend .f-lbi;
  @extend .shadow;
  @extend .py-1, .px-2;
  border: 0;
  font-size: 1rem;
  background: $cta-color;
  color: $white;
  cursor: pointer;
  transition: background .3s;

  &:hover {
    background: $cta-color-hover;
  }

  &:active {
    background: $cta-color-active;
  }

  &.expand {
    @extend .w-100;
  }
}

.carousel {
  display: flex;
  position: relative;
  align-items: flex-end;
  justify-content: center;
  height: 75vh;
  overflow: hidden;

  $carousel-transition-duration: 2s;

  .photo {
    @extend .w-100;
    height: 100%;
    position: absolute;
    object-fit: cover;
    transform: translateX(100%);

    &.active {
      transform: translateX(0%);
    }

    &.out {
      transform: translateX(-100%);
    }

    &.active, &.out {
      transition: transform $carousel-transition-duration cubic-bezier(0.65, 0, 0.35, 1);
    }
  }

  .title {
    @extend .m-2;
    width: calc(100% - 1rem);
    position: absolute;
    display: block;
    transition: opacity $carousel-transition-duration * 0.5, transform $carousel-transition-duration * 0.8 cubic-bezier(0.33, 1, 0.68, 1);
    transform: rotateY(0deg); // Safari jitter workaround

    &:not(.active) {
      opacity: 0;
      pointer-events: none;
      transform: translateY(100%);
    }

    &:hover a svg {
      transform: scale(1.02) rotateY(0deg);
    }

    &:active a svg * {
      stroke: $cta-color-active;
    }

    svg {
      transition: transform .3s;

      * {
        fill: $white;
        stroke: var(--dynamic-color-1);
        stroke-width: .4%;
        transition: stroke .2s;
      }
    }
  }

  &.variant-b .title {
    @extend .mb-0;
    transform: translateY(50%);
  }
}

.schedule {
  .row {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    font-size: .75rem;

    > * {
      @extend .py-0;
    }

    > *:nth-child(1) {
      @extend .text-center;
      @extend .text-red;

      .day {
        @extend .f-li;
        @extend .m-0;
        font-size: 2.5rem;
        font-weight: 700;
        margin-top: -(spacing(1));
        margin-bottom: -(spacing(1));
      }
    }

    > *:nth-child(2) {
      .info {
        @extend .d-flex;
        flex-wrap: wrap;
        column-gap: spacing(2);

        svg {
          height: 13px;
          width: auto;
          padding-right: 4px;
        }
      }

      .title {
        @extend .f-mb;
        @extend .m-0;
        font-size: 1.25rem;
      }
    }

    > *:nth-child(3) {
      @extend .text-center;

      @include media-query(sm) {
        button {
          width: 100%;
          margin-top: spacing(2);
        }
      }
    }
  }
}

.archive {
  @extend .schedule;
}

.event-header {
  @extend .carousel;
  height: 60vh;
}

.page-nav {
  @extend .text-center;
  @extend .py-1;
  position: sticky;
  top: $top-bar-stuck-logo-height;
  box-shadow: 0 2px 10px rgba($black, 0.07);
  background: $body-bg;
  z-index: 9;

  ul {
    @extend .f-lbi;
    @extend .p-0;
    @extend %list-style-none;
    display: inline-block;

    li {
      @extend .px-1;
      display: inline-block;
      padding-top: .25rem;
      padding-bottom: .25rem;
      transition: background .3s;
      border-radius: 10px;

      &.active {
        background: $cta-color-active;

        a, a:hover {
          color: $white;
        }
      }

      a {
        transition: color .3s;
        color: $black;

        &:hover {
          color: $cta-color-hover;
        }

        &:active {
          color: $cta-color-active;
        }
      }
    }
  }
}

.page-nav-anchor {
  scroll-margin-top: 2.5rem;
}

.cast {
  .row > * {
    &:first-child {
      @extend .ff-l;
    }

    &:last-child {
      @extend .text-end;
    }
  }
}

.gallery {
  .row {
    align-items: stretch;

    [class^='col-'] {
      display: flex;
      flex-direction: column;
      row-gap: 1rem;

      .photo {
        overflow: hidden;

        &, img {
          @extend .w-100;
          height: 100%;
        }

        img {
          display: block;
          object-fit: cover;
          transition: transform .3s;

          &:hover {
            transform: scale(1.1);
            cursor: pointer;
          }
        }
      }
    }
  }
}

@include media-query(sm) {
  header .container, .container.nav, footer .container {
    padding: spacing(0);
  }

  .menu-active nav {
    height: 100vh !important;
  }
}

@include media-query(md) {
  html {
    font-size: 20px;
    scroll-padding-top: $top-bar-initial-logo-height + $top-bar-initial-padding * 2;
  }

  @include col-classes('md');

  header {
    :root:not(.top-bar-stuck) & {
      padding: $top-bar-initial-padding 0;
    }

    .menu-toggle:after {
      margin-top: -12px;
    }
  }

  nav {
    width: 300px;
  }

  .page-nav ul li {
    padding-left: spacing(2);
    padding-right: spacing(2);
  }

  .carousel .title {
    width: 60%;
  }
}

@include media-query(lg) {
  .carousel .title {
    width: 50%;
  }
}

[data-controller='content-reveal'] {
  @extend .mb-2;

  &.revealed {
    .reveal-trigger {
      font-weight: 500;
    }

    .revealed-content {
      @extend .mt-2;
    }
  }

  .reveal-trigger {
    cursor: pointer;
  }

  .revealed-content {
    max-height: 0px;
    overflow-y: hidden;
    transition: max-height .5s, margin-top .5s;
  }
}
