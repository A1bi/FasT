.row {
  @extend %d-flex;
  @extend %justify-content-center;
  @extend %flex-wrap;
  margin-right: -(spacing(1));
  margin-left: -(spacing(1));
}

@mixin col($width) {
  flex: 0 0 auto;
  width: $width;
}

@mixin col-classes($device-size: null) {
  @for $column from 1 through $num-columns {
    @include infixed-class(col, $device-size, $column) {
      @include col(100% / $num-columns * $column);
    }
  }

  @include infixed-class(col, $device-size, auto) {
    @include col(auto);
  }

  @include infixed-class(col, $device-size, null) {
    flex: 1 0 0%;
  }
}

.container > .row > .col:not(.w-100):not([class*='col-md']):not([class*='col-lg']), .mw-text-col {
  max-width: calc(min(600px, 100%)); // calc -> workaround for SassC complaining about min
}

.col, [class^='col-'] {
  @extend %p-1;
}

@include col-classes();

.container {
  padding-left: calc(max(env(safe-area-inset-left), #{spacing(2)}));
  padding-right: calc(max(env(safe-area-inset-right), #{spacing(2)}));
  max-width: 1000px;
  box-sizing: content-box;
  margin-left: auto;
  margin-right: auto;
}

@mixin order-classes($device-size: null) {
  @for $order from 1 through 3 {
    @include infixed-class(order, $device-size, $order) {
      order: $order;
    }
  }
}

@include order-classes();

@include media-query(md) {
  @include col-classes('md');
  @include order-classes('md');
}
