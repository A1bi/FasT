@mixin utility-class($type, $name, $property, $value, $important: true) {
  #{$type}#{$name} {
    #{$property}: #{$value}#{if($important, '!important', '')};
  }
}

@mixin utility-set($prefix, $property, $mappings, $size-classes: false) {
  @each $suffix, $value in $mappings {
    $value: if($value, $value, $suffix);
    $selector: #{$prefix}-#{$suffix};
    @include utility-class('%', $selector, $property, $value, false);
    @include utility-class('.', $selector, $property, $value);
  }

  @if $size-classes {
    @include all-media-queries() using ($size) {
      @each $suffix, $value in $mappings {
        @include utility-class('.', #{$prefix}-#{$size}-#{$suffix}, $property, $value);
      }
    }
  }
}

@each $step, $factor in $spacing-steps {
  @each $property, $abbreviation in (margin: m, padding: p) {
    @each $side, $side-abbreviation in (top: t, bottom: b, left: s, right: e) {
      .#{$abbreviation}#{$side-abbreviation}-#{$step} {
        #{$property}-#{$side}: spacing($step);
      }
    }

    .#{$abbreviation}x-#{$step} {
      @extend .#{$abbreviation}s-#{$step};
      @extend .#{$abbreviation}e-#{$step};
    }

    .#{$abbreviation}y-#{$step} {
      @extend .#{$abbreviation}t-#{$step};
      @extend .#{$abbreviation}b-#{$step};
    }

    .#{$abbreviation}-#{$step} {
      #{$property}: spacing($step);
    }
  }
}

@include utility-set(text, text-align, (start: left, center: center, end: right), true);
@include utility-set(d, display, (none, block, inline, inline-block, flex), true);
@include utility-set(align-items, align-items, (start, center, end, stretch));
@include utility-set(justify-content, justify-content, (start, center, end));
@include utility-set(align, vertical-align, (middle));
