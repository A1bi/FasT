:root {
  --topbar-logo-height: #{$top-bar-initial-logo-height};
  --topbar-total-height: #{$top-bar-initial-logo-height + $top-bar-initial-padding * 2};

  &.top-bar-stuck {
    --topbar-logo-height: #{$top-bar-stuck-logo-height};
    --topbar-total-height: #{$top-bar-stuck-logo-height};
  }
}

header {
  position: sticky;
  top: 0;
  background: var(--dynamic-color-0);
  transition: padding $top-bar-stuck-transition-duration;

  .container {
    @extend %d-flex;
    @extend %align-items-center;
  }

  .menu-toggle {
    --menu-toggle-size: #{$top-bar-stuck-logo-height * 0.65};
    width: var(--menu-toggle-size);
    height: var(--menu-toggle-size);
    margin-left: $top-bar-stuck-logo-height * 0.17;
    background: $cta-color;
    position: relative;
    cursor: pointer;
    transform: rotate(-45deg);
    transition: transform $menu-reveal-duration, background .3s;

    &:after {
      @extend %w-100;
      @extend %text-center;
      @extend .ff-l;
      position: absolute;
      content: '...';
      color: $white;
      font-size: 2rem;
      left: 7px;
      top: -15px;
      transform: rotate(45deg);
    }

    &:hover {
      background: $cta-color-hover;
    }

    &:active, .menu-active & {
      background: $cta-color-active;
    }

    .menu-active & {
      transform: rotate(45deg);
    }

    @include media-dark-theme {
      transition: transform $menu-reveal-duration, color .3s, border-color .3s;
      border: 1px solid $cta-color;

      &, &:hover, &:active, .menu-active & {
        background: var(--input-bg);
      }

      &:hover {
        color: $cta-color-hover;
        border-color: $cta-color-hover;
      }

      &:active {
        color: $cta-color-active;
        border-color: $cta-color-active;
      }
    }
  }

  .logo {
    @extend %text-center;
    flex: 1;

    svg {
      @extend %d-inline-block;
      @extend %p-1;
      max-height: var(--topbar-logo-height);
      width: auto;
      stroke: $white;
      stroke-width: 0;
      transition: max-height $top-bar-stuck-transition-duration;

      @for $i from 1 through 4 {
        g:nth-of-type(#{$i}) * {
          fill: var(--dynamic-color-#{$i}) !important;
        }
      }

      g:nth-of-type(4) * {
        transform-box: fill-box;
        transform-origin: center;
        animation: rotate-diamond 1s;
      }

      @keyframes rotate-diamond {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(-180deg);
        }
      }

      @include media-dark-theme {
        stroke-width: var(--logo-stroke-width-dark, 0);
      }
    }
  }
}

.sticky-helper {
  height: 0;
}

.container.nav {
  position: relative;
}

header, .container.nav {
  z-index: 10;
}

nav {
  @extend %w-100;
  position: fixed;
  height: 0;
  max-height: calc(100vh - var(--topbar-total-height));
  overflow-y: auto;
  scrollbar-width: none;
  background: var(--nav-bg);
  transition: height $menu-reveal-duration;

  &::-webkit-scrollbar {
    @extend %d-none;
  }

  ul {
    @extend .list-style-none;
    @extend .f-li;
  }

  > ul {
    @extend %py-1, %px-2;
    @extend %black-links;
    font-size: 2rem;
    font-weight: 400;

    li > ul {
      @extend %py-0, %px-2;

      li {
        padding-bottom: .25rem;
        font-size: 1rem;
      }
    }
  }
}

@include media-query(sm) {
  header .container, .container.nav {
    padding: spacing(0);
  }

  .menu-active nav {
    height: 100vh !important;
  }
}

@include media-query(md) {
  header {
    :root:not(.top-bar-stuck) & {
      padding: $top-bar-initial-padding 0;
    }

    .menu-toggle {
      --menu-toggle-size: #{$top-bar-stuck-logo-height * 0.75};

      &:after {
        left: 9px;
        top: -15.5px;
      }
    }
  }

  nav {
    width: auto;
  }
}
