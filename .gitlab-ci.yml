.default-tags:
  tags: [ruby-2.6]

.postgres:
  tags:
    - ruby-2.6
    - postgres

.bundle: &bundle
  - bundle install -j $(sysctl -n hw.ncpu) --without development

.copy_master_key: &copy_master_key
  - cp $RAILS_CREDENTIALS_MASTER_KEY config/master.key

.prepare_ssh_agent: &prepare_ssh_agent
  - eval $(ssh-agent -s)
  - echo "$DEPLOY_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

.kill_ssh_agent: &kill_ssh_agent
  # needs to be run here (not in after_script) or the job will get stuck
  - ssh-agent -k

.production_env: &production_env
  name: production
  url: https://www.theater-kaisersesch.de

stages:
  - test
  - deploy
  - post_deploy

variables:
  RAILS_ENV: test

rubocop:
  extends: .default-tags
  except:
    - schedules
  before_script:
    - *bundle
  script:
    - rubocop
  allow_failure: true

specs:
  extends: .postgres
  except:
    - schedules
  before_script:
    - *bundle
    - *copy_master_key
  script:
    - rails db:drop db:create db:structure:load
    - rails test

audit:
  extends: .default-tags
  script:
    - gem install bundler-audit
    - bundle audit check --update

deploy:
  extends: .default-tags
  except:
    - schedules
  stage: deploy
  before_script:
    - *bundle
    - *prepare_ssh_agent
  script:
    - cap production deploy
    - *kill_ssh_agent
  environment:
    <<: *production_env
  only:
    refs:
      - master
  when: manual
  allow_failure: false

run_one_off_task:
  extends: .default-tags
  except:
    - schedules
  stage: post_deploy
  before_script:
    - *bundle
    - *prepare_ssh_agent
  script:
    - cap production one_off:run
    - *kill_ssh_agent
  environment:
    <<: *production_env
  only:
    refs:
      - master
  when: manual
