workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - when: always

.except_schedules:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: always

.production:
  extends:
    - .default-tags
  environment:
    name: production
    url: https://www.theater-kaisersesch.de
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      when: manual

.default-tags:
  tags: [ruby-3.2]

.postgres:
  tags:
    - ruby-3.2
    - postgres

.bundle: &bundle
  - bundle config set --local without development
  - bundle install -j $(sysctl -n hw.ncpu)

stages:
  - test
  - deploy
  - post-deploy

variables:
  RAILS_ENV: test
  RUBOCOP_CACHE_ROOT: .cache/rubocop

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .cache
    - public/assets

rubocop:
  extends:
    - .except_schedules
    - .default-tags
  before_script:
    - *bundle
  script:
    - rubocop

specs:
  extends:
    - .except_schedules
    - .postgres
  before_script:
    - *bundle
  script:
    - rails db:drop db:create db:schema:load
    - rails assets:precompile
    - rspec
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID"
    expose_as: 'SimpleCov report'
    paths:
      - 'coverage/'
    expire_in: 1 week

bundler audit:
  extends: .default-tags
  script:
    - gem install bundler-audit
    - bundle audit check --update

deploy:
  extends:
    - .production
  stage: deploy
  before_script:
    - *bundle
  script:
    - ssh_wrap cap production deploy

run one off task:
  extends:
    - .production
  stage: post-deploy
  before_script:
    - *bundle
  script:
    - ssh_wrap cap production one_off:run
